name: Java CI/CD with Gradle

on:
  pull_request:
    branches: [ "cicd-test" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Make application.properties & yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Make SSL keystore
        run: echo "${{ secrets.SSL_KEYSTORE }}" | base64 --decode > ./src/main/resourceskeystore.p12

      - name: Clean bootJar
        run: ./gradlew clean bootJar

      - name: Docker login
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build & push
        run: |
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/matchmate:server .
          docker push ${{ secrets.DOCKER_USERNAME }}/matchmate:server

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Connect to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 400 ec2_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}

      - name: Docker login
        run: sudo docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker pull
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/matchmate:server

      - name: Docker stop & run container
        run: |
          sudo docker stop ${{ secrets.DOCKER_USERNAME }}/matchmate:server 
          sudo docker run -d -p 443:443 ${{ secrets.DOCKER_USERNAME }}/matchmate:server
